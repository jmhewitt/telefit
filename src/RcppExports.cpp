// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// r_maternCov
arma::mat r_maternCov(arma::mat dist, double scale, double range, double smoothness, double nugget);
RcppExport SEXP _telefit_r_maternCov(SEXP distSEXP, SEXP scaleSEXP, SEXP rangeSEXP, SEXP smoothnessSEXP, SEXP nuggetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< double >::type smoothness(smoothnessSEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    rcpp_result_gen = Rcpp::wrap(r_maternCov(dist, scale, range, smoothness, nugget));
    return rcpp_result_gen;
END_RCPP
}
// r_maternArray
arma::vec r_maternArray(arma::vec dist, double scale, double range, double smoothness, double nugget);
RcppExport SEXP _telefit_r_maternArray(SEXP distSEXP, SEXP scaleSEXP, SEXP rangeSEXP, SEXP smoothnessSEXP, SEXP nuggetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< double >::type smoothness(smoothnessSEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    rcpp_result_gen = Rcpp::wrap(r_maternArray(dist, scale, range, smoothness, nugget));
    return rcpp_result_gen;
END_RCPP
}
// r_mc2_rinvwishart
arma::mat r_mc2_rinvwishart(arma::mat V, double n);
RcppExport SEXP _telefit_r_mc2_rinvwishart(SEXP VSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(r_mc2_rinvwishart(V, n));
    return rcpp_result_gen;
END_RCPP
}
// r_mvrnorm_postKron
arma::mat r_mvrnorm_postKron(arma::vec y, arma::mat A, arma::mat B, int nSamples, bool precision);
RcppExport SEXP _telefit_r_mvrnorm_postKron(SEXP ySEXP, SEXP ASEXP, SEXP BSEXP, SEXP nSamplesSEXP, SEXP precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< bool >::type precision(precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(r_mvrnorm_postKron(y, A, B, nSamples, precision));
    return rcpp_result_gen;
END_RCPP
}
// r_mvrnorm_post
arma::mat r_mvrnorm_post(arma::vec y, arma::mat Sigma, int nSamples, bool precision);
RcppExport SEXP _telefit_r_mvrnorm_post(SEXP ySEXP, SEXP SigmaSEXP, SEXP nSamplesSEXP, SEXP precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< int >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< bool >::type precision(precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(r_mvrnorm_post(y, Sigma, nSamples, precision));
    return rcpp_result_gen;
END_RCPP
}
// r_qintnorm
arma::vec r_qintnorm(arma::vec breaks, double mu, double sigma);
RcppExport SEXP _telefit_r_qintnorm(SEXP breaksSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type breaks(breaksSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(r_qintnorm(breaks, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// r_dgemkmm
arma::mat r_dgemkmm(arma::mat A, arma::mat B, arma::mat C);
RcppExport SEXP _telefit_r_dgemkmm(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(r_dgemkmm(A, B, C));
    return rcpp_result_gen;
END_RCPP
}
// r_rwishart
arma::mat r_rwishart(arma::mat V, int n);
RcppExport SEXP _telefit_r_rwishart(SEXP VSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(r_rwishart(V, n));
    return rcpp_result_gen;
END_RCPP
}
// r_rinvwishart
arma::mat r_rinvwishart(arma::mat V, int n);
RcppExport SEXP _telefit_r_rinvwishart(SEXP VSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(r_rinvwishart(V, n));
    return rcpp_result_gen;
END_RCPP
}
// r_dgeikmm
arma::mat r_dgeikmm(int N, arma::mat A, arma::mat B);
RcppExport SEXP _telefit_r_dgeikmm(SEXP NSEXP, SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(r_dgeikmm(N, A, B));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _ll(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP _stpcomposition(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP _stpfit(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP _svcfit(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP _svcpredict(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_telefit_r_maternCov", (DL_FUNC) &_telefit_r_maternCov, 5},
    {"_telefit_r_maternArray", (DL_FUNC) &_telefit_r_maternArray, 5},
    {"_telefit_r_mc2_rinvwishart", (DL_FUNC) &_telefit_r_mc2_rinvwishart, 2},
    {"_telefit_r_mvrnorm_postKron", (DL_FUNC) &_telefit_r_mvrnorm_postKron, 5},
    {"_telefit_r_mvrnorm_post", (DL_FUNC) &_telefit_r_mvrnorm_post, 4},
    {"_telefit_r_qintnorm", (DL_FUNC) &_telefit_r_qintnorm, 3},
    {"_telefit_r_dgemkmm", (DL_FUNC) &_telefit_r_dgemkmm, 3},
    {"_telefit_r_rwishart", (DL_FUNC) &_telefit_r_rwishart, 2},
    {"_telefit_r_rinvwishart", (DL_FUNC) &_telefit_r_rinvwishart, 2},
    {"_telefit_r_dgeikmm", (DL_FUNC) &_telefit_r_dgeikmm, 3},
    {"_ll",                         (DL_FUNC) &_ll,                         20},
    {"_stpcomposition",             (DL_FUNC) &_stpcomposition,             27},
    {"_stpfit",                     (DL_FUNC) &_stpfit,                     36},
    {"_svcfit",                     (DL_FUNC) &_svcfit,                     18},
    {"_svcpredict",                 (DL_FUNC) &_svcpredict,                 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_telefit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

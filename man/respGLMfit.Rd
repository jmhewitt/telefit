% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/respGLMfit.R
\name{respGLMfit}
\alias{respGLMfit}
\title{Fit the remote effects spatial process (RESP) model}
\usage{
respGLMfit(stData = NULL, X = stData$X, Y = stData$Y, Z = stData$Z,
  coords.r = stData$coords.r, Q = stData$Q, miles = TRUE,
  sds = rep(1, 3), C = rep(0.1, 3), alpha0 = NULL, beta0 = NULL,
  family = "poisson", k = ncol(stData$Z), coords.knots, nSamples,
  priors, inits)
}
\arguments{
\item{stData}{Object with class 'stData' containing data needed to fit this 
model. The data need only be manually entered if not using a stData object.}

\item{X}{[ns, p, nt] array of design matrices with local covariates}

\item{Y}{[ns, nt] matrix with response data}

\item{Z}{[nr, nt] matrix with remote covariates}

\item{coords.r}{matrix with coordinates where remote covariates
were observed (lon, lat)}

\item{Q}{the adjacency/neighborhood matrix for the spatial configuration}

\item{miles}{TRUE if covariance matrix distances should be in miles, FALSE 
for kilometers}

\item{sds}{initial proposal standard deviations for covariance parameter RW 
samplers}

\item{C}{scaling constants used to update proposal standard deviations for 
covariance parameter RW samplers.  Set \code{C=rep(0,3)} to not adapt the 
proposal sd's.}

\item{alpha0}{matrix of initial parameters for teleconnection effects.  by 
default will be the MLE fits for a marginal poisson regression.}

\item{beta0}{vector of initial parameters for regression coefficients. by 
default will be the MLE fits for a marginal poisson regression.}

\item{family}{the GLM likelihood to fit.  currently only accepts 'poisson'}

\item{k}{number of ocean EOFs to use in fitting. this can induce dimension 
reduction}

\item{coords.knots}{matrix with coordinates where remote teleconnections
will be based (lon, lat)}

\item{nSamples}{number of posterior samples to draw}

\item{priors}{list of prior distributions for model parameters.
\describe{
  \item{cov}{ list(nu=double, sigmasq=c(a,b), rho=c(L,U), kappa=c(a, b) )}
}}

\item{inits}{initial values \code{c(kappa, sigmasq, rho)} for covariance 
parameters}
}
\description{
Fit the remote effects spatial process (RESP) model
}
\examples{
# Rcpp::compileAttributes('r/temporal_LSigma/packages/telefit/')
# devtools::load_all('r/temporal_LSigma/packages/telefit/')
# devtools::document('r/temporal_LSigma/packages/telefit/')
# devtools::test('r/temporal_LSigma/packages/telefit/')
# 
# 
# data("caprecip.counts")
# data("coprecip.fit")
# 
# # scale watershed areas for stability
# caprecip.counts$X[,3,] = scale(caprecip.counts$X[,3,1])
# 
# devtools::load_all('r/temporal_LSigma/packages/telefit/')
# 
# # scale watershed areas for stability
# fit = respGLMfit( stData = caprecip.counts, 
#                   coords.knots = coprecip.fit$coords.knots,
#                   priors = list(
#                     nu = .5, sigmasq = c(2,.1), rho = c(1,600), 
#                     kappa = c(2,1/30), beta = rep(3, ncol(caprecip.counts$X))
#                   ),
#                   nSamples = 1e2,
#                   inits = c(1e1, 1, 500),
#                   sds = c(kappa = .5, ss = .25, rho = 1) * 0,
#                   C = rep(0e4,3)
#                 )
#   
# library(coda)
# 
# 1-rejectionRate(mcmc(fit$kappa))
# 
# plot(fit$ll, type='l')
# plot(fit$kappa, type='l')
# plot(fit$sigmasq, type='l')
# plot(fit$rho, type='l')
# plot(fit$beta[,1], type='l')
# plot(fit$beta[,2], type='l')
# plot(fit$beta[,3], type='l')
# 
# apply(fit$eta0,1,function(x) (sd(x)))
}
